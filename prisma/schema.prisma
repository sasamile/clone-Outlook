// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum Entity {
  Piedemonte
  Cliente
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          UserRole  @default(USER)
  accounts      Account[]
  Identity      String?
  entity        Entity?

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  sentEmails     Email[]  @relation("SentEmails")
  receivedEmails Email[]  @relation("ReceivedEmails")

  sidebarItems String[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Email {
  id        String    @id @default(cuid())
  subject   String
  body      String
  date      DateTime  @default(now())
  read      Boolean   @default(false)
  starred   Boolean   @default(false)
  pinned    Boolean   @default(false)
  folder    String    @default("INBOX")
  archived  Boolean   @default(false)
  deletedAt DateTime?

  // Relaciones con User
  fromId String
  from   User   @relation("SentEmails", fields: [fromId], references: [id])
  toId   String
  to     User   @relation("ReceivedEmails", fields: [toId], references: [id])

  // Relaciones para respuestas y reenv√≠os
  replyToId     String?
  replyTo       Email?  @relation("Replies", fields: [replyToId], references: [id])
  replies       Email[] @relation("Replies")
  forwardedId   String?
  forwardedFrom Email?  @relation("Forwards", fields: [forwardedId], references: [id])
  forwards      Email[] @relation("Forwards")
}
